/*=============================================================================
  Masaki Chikashi Ghost Templates
  メニュー辞書
  Last up date: 2018/03/15
=============================================================================*/

/*-----------------------------------------------------------------------------
  ユーザ設定
-----------------------------------------------------------------------------*/
Setting
{
	"\1\s[10]\_q/
	<b>< Settings ></b>\n\n[half]/
	<b>[呼び名]</b> \q[%(username),UserNameEntry]　/
	<b>[一人称]</b> \q[%(userfp),UserFirstPersonEntry]\n\n[half]/
	<b>[誕生日]</b> \q[%(userbdmonth)/%(userbdday),UserBirthdayEntry]　/
	<b>[性別]</b> %(choose_user_gender)\n\n[half]/
	<b>[喋り頻度]</b> %(choose_talk_interval)\n\n[half]/
	<b>[未対応コミュワード送信]</b> %(choose_send_saidword)\n\n[half]/
	%*\q[フィードバックを送る,OnInputFeedback]\n\n[half]/
	%*\q[閉じる,Cancel]\e"
}

/*-----------------------------------------------------------------------------
  名前を教える
-----------------------------------------------------------------------------*/
UserNameEntry
{
	"\1\s[10]\_q（呼ばれたい名前を入力してください。敬称を含む場合は、敬称も込みで入力してください）\_q\_w[500]\![open,inputbox,OnUsernameInput,-1]\e"
}

OnUsernameInput
{
	_content = EscapeDangerousTags(reference[0])
	if (_content != '' && _content != ' ' && _content != '　') {
		username = _content
	}
  Setting
}

OnUsernameInputCancel { Setting }

/*-----------------------------------------------------------------------------
  一人称を教える
-----------------------------------------------------------------------------*/
UserFirstPersonEntry
{
	"\1\s[10]\_q（あなたの一人称を入力してください）\_q\_w[500]\![open,inputbox,OnUserFPInput,-1]\e"
}

OnUserFPInput
{
	_content = EscapeDangerousTags(reference[0])
  if (_content != '' && _content != ' ' && _content != '　') {
		userfp = _content
	}
	Setting
}

OnUserFPInputCancel { Setting }

/*-----------------------------------------------------------------------------
  誕生日を教える
-----------------------------------------------------------------------------*/
UserBirthdayEntry
{
	"\1\s[10]\_q（あなたの誕生日を 1/1 や 12/31 のような形式を用いて、半角で入力してください）\_q\_w[500]\![open,inputbox,OnUserBDInput,-1]\e"
}

OnUserBDInput
{
	_content = EscapeDangerousTags(reference[0])
	if (_content != '' && _content != ' ' && _content != '　') {
		userbd = _content
		SetUserBirthday
	}
	Setting
}

OnUserBDInputCancel { Setting }

/*-----------------------------------------------------------------------------
  ユーザ性別を設定する
-----------------------------------------------------------------------------*/
SetUserGender_女
{
    SetUserGender('女')
}

SetUserGender_男
{
    SetUserGender('男')
}

SetUserGender_その他
{
    SetUserGender('その他')
}

SetUserGender
{
    usergender = _argv[0]
    choose_user_gender = GetGenderChoices(_argv[0])

    Setting
}

GetGenderChoices
{
    _name = "男,女,その他"
    _func = 'SetUserGender'
    GetChoices(_name,_func,_argv[0])
}

/*-----------------------------------------------------------------------------
  喋り頻度を選択する
-----------------------------------------------------------------------------*/

SetTalkInterval_高
{
    SetTalkInterval(60,'高')
}

SetTalkInterval_中
{
    SetTalkInterval(120,'中')
}

SetTalkInterval_低
{
    SetTalkInterval(180,'低')
}

SetTalkInterval_稀
{
    SetTalkInterval(300,'稀')
}

SetTalkInterval_黙
{
    SetTalkInterval(60,'黙')
}

SetTalkInterval
{
    aitalkinterval = _argv[0]
    choose_talk_interval = GetTalkIntervalChoices(_argv[1])

    Setting
}

GetTalkIntervalChoices
{
    _name = "高,中,低,稀,黙"
    _func = 'SetTalkInterval'
    GetChoices(_name,_func,_argv[0])
}

/*-----------------------------------------------------------------------------
  コミュワード送信を選択する
-----------------------------------------------------------------------------*/
SetSendSaidWord_する
{
    SetSendSaidWord(1,'する')
}

SetSendSaidWord_しない
{
    SetSendSaidWord(0,'しない')
}

SetSendSaidWord
{
    sendsaidword = _argv[0]
    choose_send_saidword = GetSendSaidWordChoices(_argv[1])

    Setting
}

GetSendSaidWordChoices
{
    _name = "する,しない"
    _func = 'SetSendSaidWord'
    GetChoices(_name,_func,_argv[0])
}

/*-----------------------------------------------------------------------------
  選択肢のリストを取得する
-----------------------------------------------------------------------------*/
GetChoices
{
    _name   = _argv[0]
    _func   = _argv[1]
    _choice = _argv[2]
    _str = ""
    foreach _name; _i {
        if _choice == _i {
            _str += "@checkOn %(_i)  "
        } else {
            _str += "\q[○ %(_i),%(_func)_%(_i)]  "
        }
    }
    _str = CUTSPACE(_str)
    _str
}